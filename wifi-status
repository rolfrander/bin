#!/usr/bin/perl

use Getopt::ArgParse;
use Net::Ping;
use Time::HiRes qw(time);
use POSIX qw(strftime);

$ap = Getopt::ArgParse->new_parser(
       prog        => 'wifi-status',
       description => 'Report wifi status on Mac OSX'
);

# Parse an option: '--foo value' or '-f value'
$ap->add_arg('--run', '-r', type => 'Bool', help => 'Keep running, print info each second');

# Parse a boolean: '--bool' or '-b' using a different name from
# the option
$ap->add_arg('--ping', '-p', type => 'Scalar', help => 'Ping the given IP-address using TCP SYN', metavar => 'IP');
$opts=$ap->parse_args(@ARGV);

$repeat = $opts->run;

if($opts->ping) {
  $p = Net::Ping->new("syn");
  $p->port_number(443);
  $p->hires();
}

do {
  $t = time;

  open(AIRPORT, "/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I |");

  while(<AIRPORT>) {
    if(/agrCtlRSSI: (-?\d+)/) { $signal = $1;}
    if(/agrCtlNoise: (-?\d+)/){ $noise = $1;}
    if(/lastTxRate: (\d+)/)   { $lastrate = $1;}
    if(/maxRate: (\d+)/)      { $rate = $1;}
    if(/BSSID: ([0-9a-f:]+)/) {
      $BSSID = $1;
      $ap = $BSSID;
      if($BSSID =~ /1d:bd:28$/) { $ap="ap-trapp-2.4" ;}
      if($BSSID =~ /1d:bd:29$/) { $ap="ap-trapp-5" ;}
      if($BSSID =~ /1d:bd:16$/) { $ap="ap-stue-2.4" ;}
      if($BSSID =~ /1d:bd:17$/) { $ap="ap-stue-5" ;}
      if($BSSID =~ /1d:bd:60$/) { $ap="ap-soverom-2.4" ;}
      if($BSSID =~ /1d:bd:61$/) { $ap="ap-soverom-5" ;}
    }
    if(/SSID: (.*)/) { $ssid = $1; }
  }

  close(AIRPORT);

  if($opts->ping) {
    @ping = $p->ping("192.168.4.27");
    if (($host,$rtt,$ip) = $p->ack) {
      $pingtime = $rtt*1000;
    } else {
      $pingtime = -1;
    }
  }

  $date = strftime "%Y-%m-%d %H:%M:%S", localtime $t;
  $date .= sprintf ".%03d", ($t-int($t))*1000; # without rounding

  printf("%s SSID=%s AP=%s s/n=%i maxrate=%i lastrate=%i pingtime=%.3fms\n",
         $date, $ssid, $ap, $signal-$noise, $rate, $lastrate, $pingtime);

  $repeat && sleep 1;
} while($repeat);
